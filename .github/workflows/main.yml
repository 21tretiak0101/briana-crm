# ---------------------------------
#
# Briana CRM CI/CD
# Copyright (c) Ilia Tretiak 2020.
#
# ---------------------------------

name: briana-crm
env:
  BRIANA_SERVER_BUILD_NAME: "briana-server.war"
  ECR_REPOSITORY_URI      : "777491145948.dkr.ecr.us-east-2.amazonaws.com"
  SERVER_IMAGE_NAME       : "$ECR_REPOSITORY_URI/briana-server:${{ github.sha }}"
  CLIENT_IMAGE_NAME       : "$ECR_REPOSITORY_URI/briana-client:${{ github.sha }}"
  AWS_REGION_NAME         : "us-east-2"
  ARTIFACT_NAME           : "briana-crm:{{ github.sha }}.zip"

on:
  push:
    branches: [dev]

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - uses: actions/setup-java@v1.4.1
        with:
          java-version: '14'

      - name: Clone repository
        uses: actions/checkout@v1

      - name: Run briana-client tests
         run: |
          npm install
          npm run test
          npm run lint

      - name: Run briana-server tests
         run: mvn test

      - name: Build briana-client
         run: npm run build --prod

      - name: Build briana-server
         run: mvn package -DskipTests

      - name: Copy artifacts to build directory
         run: |
          mkdir ${{ env.ARTIFACT_NAME }}
          cp briana-server/target/${{ env.BRIANA_SERVER_BUILD_NAME }} ${{ env.ARTIFACT_NAME }}
          cp -r briana-client/dist ${{ env.ARTIFACT_NAME }}

      - name: Archive production artifacts
         run: zip -r ${{ env.ARTIFACT_NAME }}.zip build

      - name: Upload production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}.zip

      - name: Print finish message
         run: echo "Continious integration pipeline finished successfully !"

  cd-pipeline:
    needs: [ci-pipeline]
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v1

      - name: Upload artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Unzip artifacts and move them
         run: |
          uzip ${{ env.ARTIFACT_NAME }}.zip
          mkdir briana-server/target
          mkdir briana-client/dist
          mkdir briana-client/dist/briana-client
          mv ${{ env.ARTIFACT_NAME }}/${{ env.BRIANA_SERVER_BUILD_NAME }} briana-server/target
          mv -r ${{ env.ARTIFACT_NAME }}/ briana-client/dist/briana-client

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
         aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Login in AWS ECR
         run: |
          aws ecr get-login-password \
          --region ${{ env.AWS_REGION_NAME }} \
          | docker login \
          --username AWS \
          --password-stdin ${{ env.ECR_REPOSITORY_URI }}

      - name: Create docker images
         run: |
             docker build -t ${{ env.CLIENT_IMAGE_NAME}} ./briana-server/
             docker build -t ${{ env.SERVER_IMAGE_NAME}} ./briana-client/

      - name: Push images to AWS ECR
           run: |
             docker push ${{ env.CLIENT_IMAGE_NAME}}
             docker push ${{ env.SERVER_IMAGE_NAME}}

      - name: Print finish message
         run: echo "Build pipeline finished successfully !"
